---
  - name: Test Playbook
    hosts: all

    tasks:
    - name: Ping all nodes
      ping:

    - name: see whoami
      shell: "whoami"
      register: output

    - name: look output
      debug:
        msg: "{{ output.stdout }}"

  - name: Install apache to web server
    hosts: web

    tasks:
    - name: install apache2 in web server
      apt:
        name: apache2
        state: latest
        update_cache: yes

    - name: start and enable apache2 service
      service:
        name: apache2
        state: started
        enabled: yes

    - name: Create index.html in /var/www/html
      copy:
        content: "{{ ansible_default_ipv4.address }} {{ ansible_hostname }}"
        dest: /var/www/html/index.html
        owner: training
        group: training
        mode: '0755'
 
    - name: restart apache2
      service:
        name: apache2
        state: restarted

  - name: Install DB in node3
    hosts: db

    tasks:
    - name: install InfluxDB key
      apt_key:
        url: https://repos.influxdata.com/influxdb.key
        state: present
    
    - name: add InfluxDB repository
      apt_repository:
        repo: deb https://repos.influxdata.com/ubuntu bionic stable
        state: present
        filename: influxdb.list

    - name: install InfluxDB
      apt:
        name: influxdb
        state: latest
        update_cache: yes

    - name: copy configuration file to /etc/influxdb/influxdb.conf
      copy:
        src: files/influxdb.conf
        dest: /etc/influxdb/influxdb.conf
        owner: root
        group: root
        mode: '0644'

    - name: restart influxdb service
      service:
        name: influxdb
        state: restarted 
        enabled: yes
  
  - name: Add database and user from control to db
    hosts: control

    tasks:
    - name: install python3-pip
      apt:
        name: python3-pip
        state: latest
        update_cache: yes
    
    - name: install influxdb and requests using pip3
      pip:
        name:
          - requests
          - influxdb
        executable: pip3

    - name: create database in db server
      influxdb_database:
        hostname: 10.240.0.5
        database_name: server_metrics
 
    - name: create user in database
      influxdb_user:
        user_name: server
        user_password: s3cr3t
        hostname: 10.240.0.5
        grants:
          - database: "server_metrics"
            privilege: "all"

  - name: Install Grafana in node1
    hosts: monitor

    tasks:
    - name: add apt key for Grafana
      apt_key:
        url: https://packages.grafana.com/gpg.key 
        state: present

    - name: add repository for Grafana
      apt_repository:
        repo: deb https://packages.grafana.com/oss/deb stable main
        state: present
        filename: grafana.list

    - name: install grafana
      apt:
        name: grafana
        state: latest
        update_cache: yes

    - name: start and enable grafana
      service:
        name: grafana-server
        state: started
        enabled: yes

  - name: Install servermetrics.py
    hosts: nodes

    tasks:
    - name: install pip3
      apt:
        name: python3-pip
        state: latest
        update_cache: yes

    - name: install prerequisites
      pip:
        name:
          - influxdb
          - psutil
        executable: pip3

    - name: render servermetrics.py in /home/traning
      template:
        src: servermetrics.py.j2
        dest: /home/training/servermetrics.py
        owner: training
        group: training
        mode: '0755'

    - name: run once servermetrics.py
      shell: "python3 /home/training/servermetrics.py prod"

    - name: add in crontab
      cron:
        name: server_metrics
        minute: "*/2"
        job: "python3 /home/training/servermetrics.py prod"
