---  
  - name: Install apache to web server
    hosts: web

    tasks:
    - name: use installpackages role
      include_role:
        name: installpackages
      vars:
        package: "apache2"
        service: "apache2"

    - name: use configservice role
      include_role:
        name: configservice
      vars:
        content: "{{ ansible_default_ipv4.address }} {{ ansible_hostname }}"
        dest: "/var/www/html/index.html"
        owner: "training"
        group: "training"
        mode: "0755"
        package: "apache2"

  - name: Install DB in node3
    hosts: db

    tasks:
    - name: use installpackages role
      include_role:
        name: installpackages
      vars:
        url: "https://repos.influxdata.com/influxdb.key"
        repo: "deb https://repos.influxdata.com/ubuntu bionic stable"
        package: "influxdb"
        service: "influxdb"
    
    - name: use configservice role
      include_role:
        name: configservice
      vars:
        src: "files/influxdb.conf"
        dest: "/etc/influxdb/influxdb.conf"
        owner: "root"
        group: "root"
        mode: "0644"
        package: "influxdb"

  - name: Add database and user from control to db
    hosts: control

    tasks:
    - name: install python3-pip
      apt:
        name: python3-pip
        state: latest
        update_cache: yes

    - name: install influxdb and requests using pip3
      pip:
        name:
          - requests
          - influxdb
        executable: pip3

    - name: create database in db server
      influxdb_database:
        hostname: 10.240.0.21
        database_name: server_metrics

    - name: create user in database
      influxdb_user:
        user_name: server
        user_password: s3cr3t
        hostname: 10.240.0.21
        grants:
          - database: "server_metrics"
            privilege: "all"

  - name: Install Grafana in node1
    hosts: monitor

    tasks:
    - name: use installpackages role
      include_role:
        name: installpackages
      vars:
        url: "https://packages.grafana.com/gpg.key"
        repo: "deb https://packages.grafana.com/oss/deb stable main"
        package: "grafana"
        service: "grafana-server"

  - name: Install servermetrics.py
    hosts: nodes

    tasks:
    - name: install pip3
      apt:
        name: python3-pip
        state: latest
        update_cache: yes

    - name: install prerequisites
      pip:
        name:
          - influxdb
          - psutil
        executable: pip3

    - name: render servermetrics.py in /home/training
      block:
        - name: render test template
          template:
            src: servermetrics.py.j2
            dest: /home/training/testservermetrics.py
            owner: training
            group: training
            mode: '0755'

        - name: test servermetrics
          shell: "python3 /home/training/testservermetrics.py test"
          register: test_servermetrics

        - name: remove test file
          file:
            path: /home/training/testservermetrics.py
            state: absent

        - name: render prod file
          template:
            src: servermetrics.py.j2
            dest: /home/training/servermetrics.py
            owner: training
            group: training
            mode: '0755'
          register: metricsfile

        - name: run once servermetrics.py
          shell: "python3 /home/training/servermetrics.py prod"
          when: metricsfile.changed
      rescue:
        - name: remove test file
          file:
            path: /home/training/testservermetrics.py
            state: absent

    - name: add in crontab
      cron:
        name: server_metrics
        minute: "*/2"
        job: "python3 /home/training/servermetrics.py prod"
